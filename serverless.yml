service: demo-toc
frameworkVersion: "3"
useDotenv: true
provider:
  name: aws
  runtime: nodejs14.x
  region: ap-south-1
  stage: ${opt:stage, 'dev'}
  environment:
    CURRENT_STAGE: ${sls:stage}
    CONFIG_VALUES_TABLE: !Ref configValuesTable
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: !GetAtt configValuesTable.Arn

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
          cors: true
  getConfig:
    handler: getConfig.handler
    events:
      - http:
          path: config
          method: get
          cors: true
  setConfig:
    handler: scripts/updateConfigTable.js.updateConfigValues
    events:
      - http:
          path: config
          method: post
          cors: true

resources:
  Resources:
    configValuesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-config-values
        AttributeDefinitions:
          - AttributeName: value
            AttributeType: S
        KeySchema:
          - AttributeName: value
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

# custom:
#   scripts:
#         hooks:
#           'after:deploy:deploy': npm run update-config


# plugins:
# - serverless-plugin-scripts